{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://phylospec.org/schemas/component-library-schema-v3.json",
  "title": "Component Library Schema v3",
  "description": "Schema for validating component libraries with enhanced metadata, UI hints, and examples",
  "type": "object",
  "required": [
    "componentLibrary"
  ],
  "properties": {
    "componentLibrary": {
      "type": "object",
      "required": [
        "name",
        "version",
        "engine",
        "engineVersion",
        "description",
        "types",
        "generators"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        },
        "engine": {
          "type": "string"
        },
        "engineVersion": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "authors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of authors or maintainers of the schema"
        },
        "license": {
          "type": "string",
          "description": "License identifier, e.g., MIT"
        },
        "types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/type"
          }
        },
        "generators": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/generator"
          }
        }
      }
    }
  },
  "definitions": {
    "type": {
      "type": "object",
      "required": [
        "name",
        "description"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "extends": {
          "type": "string"
        },
        "typeParameters": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Type parameters for generic types (e.g., ['T'] for Vector<T>)"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/property"
          }
        },
        "namespace": {
          "type": "string",
          "description": "Namespace for this type"
        }
      }
    },
    "generator": {
      "type": "object",
      "required": [
        "name",
        "generatorType",
        "generatedType",
        "arguments"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "generatorType": {
          "type": "string",
          "enum": [
            "distribution",
            "function"
          ]
        },
        "generatedType": {
          "type": "string"
        },
        "typeParameters": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Type parameters for generic generators (e.g., ['T'] for Mixture<T>)"
        },
        "arguments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/argument"
          }
        },
        "ioHints": {
          "type": "object",
          "description": "File I/O metadata for data-loading or exporting functions",
          "properties": {
            "role": {
              "type": "string",
              "enum": [
                "dataInput",
                "dataOutput"
              ]
            },
            "extensions": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Supported file extensions (e.g. [\".nex\", \".fasta\"])"
            },
            "fileArgument": {
              "type": "string",
              "description": "Name of the argument that accepts the file path"
            }
          }
        },
        "examples": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Example usage snippets for this generator"
        }
      }
    },
    "argument": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "recommended": {
          "type": "boolean",
          "description": "Indicates that this argument is recommended but not required"
        },
        "default": {
          "description": "Default value for this argument if not specified"
        },
        "dimension": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "description": "Fixed dimension as a positive integer"
            },
            {
              "type": "string",
              "description": "Dimension expression using dot notation (e.g., 'parent.target.dimension', 'tree.nBranches', 'data.ntax')"
            }
          ],
          "description": "Expected dimension of the argument. Can be a fixed integer or an expression that references other parts of the model"
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of the argument"
        },
        "uiHints": {
          "type": "object",
          "description": "UI hints for rendering this argument",
          "properties": {
            "widget": {
              "type": "string",
              "description": "Suggested widget type (e.g., 'slider', 'checkbox', 'file-picker')"
            },
            "order": {
              "type": "integer",
              "description": "Display order relative to other arguments"
            },
            "group": {
              "type": "string",
              "description": "Group name for organizing related arguments"
            }
          }
        }
      }
    },
    "property": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "default": {
          "description": "Default value if not specified"
        }
      }
    }
  }
}