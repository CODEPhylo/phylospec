{
  "componentLibrary": {
    "name": "PhyloSpec Core",
    "version": "1.3.0",
    "engine": "PhyloSpec",
    "engineVersion": "1.0.0",
    "description": "Canonical phylogenetic modeling components from PhyloSpec with dimension expressions and taxa handling - Updated to match Java type system",
    "types": [
      {
        "name": "Distribution",
        "description": "Abstract type representing a probability distribution",
        "namespace": "phylospec.types",
        "properties": {
          "generatedType": {
            "type": "String",
            "description": "The type of value this distribution generates"
          }
        }
      },
      {
        "name": "Normal",
        "description": "Normal distribution",
        "extends": "Distribution<Real>",
        "namespace": "phylospec.distributions"
      },
      {
        "name": "LogNormal",
        "description": "Log-normal distribution",
        "extends": "Distribution<PositiveReal>",
        "namespace": "phylospec.distributions"
      },
      {
        "name": "Gamma",
        "description": "Gamma distribution",
        "extends": "Distribution<PositiveReal>",
        "namespace": "phylospec.distributions"
      },
      {
        "name": "Beta",
        "description": "Beta distribution",
        "extends": "Distribution<Probability>",
        "namespace": "phylospec.distributions"
      },
      {
        "name": "Exponential",
        "description": "Exponential distribution",
        "extends": "Distribution<PositiveReal>",
        "namespace": "phylospec.distributions"
      },
      {
        "name": "Uniform",
        "description": "Uniform distribution",
        "extends": "Distribution<Real>",
        "namespace": "phylospec.distributions"
      },
      {
        "name": "Dirichlet",
        "description": "Dirichlet distribution",
        "extends": "Distribution<Simplex>",
        "namespace": "phylospec.distributions"
      },
      {
        "name": "MultivariateNormal",
        "description": "Multivariate normal distribution",
        "extends": "Distribution<Vector<Real>>",
        "namespace": "phylospec.distributions"
      },
      {
        "name": "Yule",
        "description": "Yule tree distribution",
        "extends": "Distribution<Tree>",
        "namespace": "phylospec.distributions"
      },
      {
        "name": "BirthDeath",
        "description": "Birth-death tree distribution",
        "extends": "Distribution<Tree>",
        "namespace": "phylospec.distributions"
      },
      {
        "name": "Coalescent",
        "description": "Coalescent tree distribution",
        "extends": "Distribution<Tree>",
        "namespace": "phylospec.distributions"
      },
      {
        "name": "FossilBirthDeath",
        "description": "Birth-death distribution with fossil sampling",
        "extends": "Distribution<TimeTree>",
        "namespace": "phylospec.distributions"
      },
      {
        "name": "PhyloCTMC",
        "description": "Phylogenetic continuous-time Markov chain distribution",
        "extends": "Distribution<Alignment>",
        "namespace": "phylospec.distributions"
      },
      {
        "name": "PhyloBM",
        "description": "Phylogenetic Brownian motion distribution",
        "extends": "Distribution<Vector<Real>>",
        "namespace": "phylospec.distributions"
      },
      {
        "name": "PhyloOU",
        "description": "Phylogenetic Ornstein-Uhlenbeck distribution",
        "extends": "Distribution<Vector<Real>>",
        "namespace": "phylospec.distributions"
      },
      {
        "name": "IID",
        "description": "IID distribution",
        "extends": "Distribution<Vector<T>>",
        "typeParameters": ["T"],
        "namespace": "phylospec.distributions"
      },
      {
        "name": "Mixture",
        "description": "Mixture distribution",
        "extends": "Distribution<T>",
        "typeParameters": ["T"],
        "namespace": "phylospec.distributions"
      },
      {
        "name": "Real",
        "description": "Real-valued number",
        "namespace": "phylospec.types"
      },
      {
        "name": "Integer",
        "description": "Integer-valued number",
        "namespace": "phylospec.types"
      },
      {
        "name": "Boolean",
        "description": "Logical value",
        "namespace": "phylospec.types"
      },
      {
        "name": "String",
        "description": "Text value",
        "namespace": "phylospec.types"
      },
      {
        "name": "PositiveReal",
        "description": "Positive real number (> 0)",
        "extends": "Real",
        "namespace": "phylospec.types"
      },
      {
        "name": "NonNegativeReal",
        "description": "Non-negative real number (>= 0)",
        "extends": "Real",
        "namespace": "phylospec.types"
      },
      {
        "name": "Probability",
        "description": "Probability value [0,1]",
        "extends": "Real",
        "namespace": "phylospec.types"
      },
      {
        "name": "PositiveInteger",
        "description": "Positive integer (> 0)",
        "extends": "Integer",
        "namespace": "phylospec.types"
      },
      {
        "name": "Vector",
        "description": "Generic ordered collection of elements",
        "namespace": "phylospec.types",
        "typeParameters": ["T"]
      },
      {
        "name": "Matrix",
        "description": "Generic two-dimensional grid of values",
        "namespace": "phylospec.types",
        "typeParameters": ["T"]
      },
      {
        "name": "SquareMatrix",
        "description": "Square matrix with equal number of rows and columns",
        "extends": "Matrix",
        "namespace": "phylospec.types",
        "typeParameters": ["T"]
      },
      {
        "name": "Simplex",
        "description": "Probability vector with elements that sum to 1.0",
        "extends": "Vector<Probability>",
        "namespace": "phylospec.types"
      },
      {
        "name": "QMatrix",
        "description": "Rate matrix for substitution models",
        "extends": "SquareMatrix<Real>",
        "namespace": "phylospec.types"
      },
      {
        "name": "StochasticMatrix",
        "description": "Stochastic matrix - probability transition matrix",
        "extends": "Matrix<Probability>",
        "namespace": "phylospec.types"
      },
      {
        "name": "List",
        "description": "Ordered collection of elements",
        "namespace": "phylospec.types",
        "typeParameters": ["T"]
      },
      {
        "name": "Map",
        "description": "Mappings from keys to values",
        "namespace": "phylospec.types",
        "typeParameters": ["K", "V"]
      },
      {
        "name": "Set",
        "description": "Unordered collection with unique elements",
        "namespace": "phylospec.types",
        "typeParameters": ["T"]
      },
      {
        "name": "Nucleotide",
        "description": "DNA/RNA nucleotide alphabet",
        "namespace": "phylospec.types",
        "alphabetType": {
          "states": ["A", "C", "G", "T"],
          "ambiguous": ["R", "Y", "S", "W", "K", "M", "B", "D", "H", "V", "N", "-", "?"]
        }
      },
      {
        "name": "AminoAcid",
        "description": "Standard amino acid alphabet",
        "namespace": "phylospec.types",
        "alphabetType": {
          "states": ["A", "R", "N", "D", "C", "Q", "E", "G", "H", "I", "L", "K", "M", "F", "P", "S", "T", "W", "Y", "V"],
          "ambiguous": ["B", "Z", "X", "*", "-", "?"]
        }
      },
      {
        "name": "Sequence",
        "description": "Biological sequence with elements from alphabet A",
        "namespace": "phylospec.types",
        "typeParameters": ["A"],
        "properties": {
          "length": {
            "type": "Integer",
            "description": "Length of the sequence"
          },
          "alphabet": {
            "type": "String",
            "description": "Alphabet type (e.g., 'Nucleotide', 'AminoAcid')"
          }
        }
      },
      {
        "name": "DNASequence",
        "description": "DNA sequence (alias for Sequence<Nucleotide>)",
        "extends": "Sequence",
        "namespace": "phylospec.types",
        "typeAlias": {
          "baseType": "Sequence",
          "typeArguments": ["Nucleotide"]
        }
      },
      {
        "name": "ProteinSequence",
        "description": "Protein sequence (alias for Sequence<AminoAcid>)",
        "extends": "Sequence",
        "namespace": "phylospec.types",
        "typeAlias": {
          "baseType": "Sequence",
          "typeArguments": ["AminoAcid"]
        }
      },
      {
        "name": "Tree",
        "description": "Phylogenetic tree structure",
        "namespace": "phylospec.types",
        "properties": {
          "ntax": {
            "type": "Integer",
            "description": "Number of taxa/tips"
          },
          "nBranches": {
            "type": "Integer", 
            "description": "Number of branches (2n-2 for rooted tree)"
          },
          "nInternalNodes": {
            "type": "Integer",
            "description": "Number of internal nodes (n-1 for rooted tree)"
          },
          "taxa": {
            "type": "TaxonSet",
            "description": "Taxa in the tree"
          }
        }
      },
      {
        "name": "TimeTree",
        "description": "Time-calibrated tree",
        "extends": "Tree",
        "namespace": "phylospec.types"
      },
      {
        "name": "TreeNode",
        "description": "Node in a phylogenetic tree",
        "namespace": "phylospec.types"
      },
      {
        "name": "Taxon",
        "description": "Taxonomic unit",
        "namespace": "phylospec.types",
        "properties": {
          "name": {
            "type": "String",
            "description": "Taxon name"
          },
          "age": {
            "type": "Real",
            "description": "Age/date of taxon (for tip-dated analyses)"
          }
        }
      },
      {
        "name": "TaxonSet",
        "description": "Collection of taxa",
        "namespace": "phylospec.types",
        "properties": {
          "ntax": {
            "type": "Integer",
            "description": "Number of taxa in the set"
          },
          "names": {
            "type": "Vector<String>",
            "description": "Names of taxa"
          }
        }
      },
      {
        "name": "Alignment",
        "description": "Multiple sequence alignment with extractable properties",
        "namespace": "phylospec.types",
        "properties": {
          "ntax": {
            "type": "Integer",
            "description": "Number of sequences"
          },
          "nchar": {
            "type": "Integer",
            "description": "Number of characters/sites"
          },
          "dataType": {
            "type": "String",
            "description": "Type of data (nucleotide, amino acid, etc.)"
          },
          "taxa": {
            "type": "TaxonSet",
            "description": "Taxa in the alignment"
          }
        }
      }
    ],
    "generators": [
      {
        "name": "IID",
        "generatorType": "distribution",
        "generatedType": "Vector<T>",
        "namespace": "phylospec.distributions",
        "description": "Vector of independent and identically distributed random variables",
        "typeParameters": ["T"],
        "arguments": [
          {
            "name": "base",
            "type": "Distribution<T>",
            "description": "Base distribution for each component",
            "required": true
          },
          {
            "name": "n",
            "type": "PositiveInteger",
            "description": "Number of independent draws",
            "required": true
          }
        ]
      },
      {
        "name": "Mixture",
        "generatorType": "distribution",
        "generatedType": "T",
        "namespace": "phylospec.distributions.mixture",
        "description": "Mixture of distributions with the same return type",
        "typeParameters": ["T"],
        "arguments": [
          {
            "name": "components",
            "type": "List<Distribution<T>>",
            "description": "Component distributions that all generate type T",
            "required": true
          },
          {
            "name": "weights",
            "type": "Simplex",
            "description": "Mixture weights for each component",
            "required": true,
            "dimension": "components.length"
          }
        ]
      },
      {
        "name": "Normal",
        "generatorType": "distribution",
        "generatedType": "Real",
        "namespace": "phylospec.distributions",
        "description": "Normal (Gaussian) distribution",
        "arguments": [
          {
            "name": "mean",
            "type": "Real",
            "description": "Mean of the distribution",
            "required": true,
            "default": 0.0
          },
          {
            "name": "sd",
            "type": "PositiveReal",
            "description": "Standard deviation",
            "required": true,
            "default": 1.0
          }
        ]
      },
      {
        "name": "LogNormal",
        "generatorType": "distribution",
        "generatedType": "PositiveReal",
        "namespace": "phylospec.distributions",
        "description": "Log-normal distribution for positive real values",
        "arguments": [
          {
            "name": "meanlog",
            "type": "Real",
            "description": "Mean of the distribution in log space",
            "required": true,
            "default": 0.0
          },
          {
            "name": "sdlog",
            "type": "PositiveReal",
            "description": "Standard deviation in log space",
            "required": true,
            "default": 1.0
          }
        ]
      },
      {
        "name": "Gamma",
        "generatorType": "distribution",
        "generatedType": "PositiveReal",
        "namespace": "phylospec.distributions",
        "description": "Gamma distribution for positive real values",
        "arguments": [
          {
            "name": "shape",
            "type": "PositiveReal",
            "description": "Shape parameter",
            "required": true,
            "default": 1.0
          },
          {
            "name": "rate",
            "type": "PositiveReal",
            "description": "Rate parameter",
            "required": true,
            "default": 1.0
          }
        ]
      },
      {
        "name": "Beta",
        "generatorType": "distribution",
        "generatedType": "Probability",
        "namespace": "phylospec.distributions",
        "description": "Beta distribution for values in (0,1)",
        "arguments": [
          {
            "name": "alpha",
            "type": "PositiveReal",
            "description": "Alpha parameter",
            "required": true,
            "default": 1.0
          },
          {
            "name": "beta",
            "type": "PositiveReal",
            "description": "Beta parameter",
            "required": true,
            "default": 1.0
          }
        ]
      },
      {
        "name": "Exponential",
        "generatorType": "distribution",
        "generatedType": "PositiveReal",
        "namespace": "phylospec.distributions",
        "description": "Exponential distribution for rate parameters",
        "arguments": [
          {
            "name": "rate",
            "type": "PositiveReal",
            "description": "Rate parameter",
            "required": true,
            "default": 1.0
          }
        ]
      },
      {
        "name": "Uniform",
        "generatorType": "distribution",
        "generatedType": "Real",
        "namespace": "phylospec.distributions",
        "description": "Uniform distribution for bounded values",
        "arguments": [
          {
            "name": "lower",
            "type": "Real",
            "description": "Lower bound",
            "required": true
          },
          {
            "name": "upper",
            "type": "Real",
            "description": "Upper bound",
            "required": true
          }
        ]
      },
      {
        "name": "Dirichlet",
        "generatorType": "distribution",
        "generatedType": "Simplex",
        "namespace": "phylospec.distributions",
        "description": "Dirichlet distribution for probability vectors",
        "arguments": [
          {
            "name": "alpha",
            "type": "Vector<Real>",
            "description": "Concentration parameters",
            "required": true,
            "default": [1.0, 1.0, 1.0, 1.0],
            "dimension": "target.dimension"
          }
        ]
      },
      {
        "name": "MultivariateNormal",
        "generatorType": "distribution",
        "generatedType": "Vector<Real>",
        "namespace": "phylospec.distributions",
        "description": "Multivariate normal for correlated values",
        "arguments": [
          {
            "name": "mean",
            "type": "Vector<Real>",
            "description": "Mean vector",
            "required": true,
            "dimension": "target.dimension"
          },
          {
            "name": "covariance",
            "type": "Matrix<Real>",
            "description": "Covariance matrix",
            "required": true,
            "dimension": "target.dimension"
          }
        ]
      },
      {
        "name": "Yule",
        "generatorType": "distribution",
        "generatedType": "Tree",
        "namespace": "phylospec.distributions.tree",
        "description": "Yule pure-birth process for trees",
        "arguments": [
          {
            "name": "birthRate",
            "type": "PositiveReal",
            "description": "Birth rate parameter",
            "required": true,
            "default": 1.0
          },
          {
            "name": "taxa",
            "type": "TaxonSet",
            "description": "Taxa for the tree",
            "required": false
          }
        ]
      },
      {
        "name": "FossilBirthDeath",
        "generatorType": "distribution",
        "generatedType": "TimeTree",
        "namespace": "phylospec.distributions.tree",
        "description": "Birth-death process with fossil sampling",
        "arguments": [
          {
            "name": "birthRate",
            "type": "PositiveReal",
            "description": "Birth (speciation) rate",
            "required": true
          },
          {
            "name": "deathRate",
            "type": "NonNegativeReal",
            "description": "Death (extinction) rate",
            "required": true
          },
          {
            "name": "samplingRate",
            "type": "NonNegativeReal",
            "description": "Rate of fossil sampling",
            "required": true
          },
          {
            "name": "rho",
            "type": "Probability",
            "description": "Probability of sampling at present",
            "required": false,
            "default": 1.0
          },
          {
            "name": "origin",
            "type": "PositiveReal",
            "description": "Time of origin",
            "required": false
          },
          {
            "name": "taxa",
            "type": "TaxonSet",
            "description": "Taxa for the tree (including fossils)",
            "required": false
          }
        ]
      },
      {
        "name": "BirthDeath",
        "generatorType": "distribution",
        "generatedType": "Tree",
        "namespace": "phylospec.distributions.tree",
        "description": "Birth-death process for trees",
        "arguments": [
          {
            "name": "birthRate",
            "type": "PositiveReal",
            "description": "Birth rate parameter",
            "required": true
          },
          {
            "name": "deathRate",
            "type": "PositiveReal",
            "description": "Death rate parameter",
            "required": true
          },
          {
            "name": "rootHeight",
            "type": "PositiveReal",
            "description": "Height of the tree root",
            "required": false
          },
          {
            "name": "taxa",
            "type": "TaxonSet",
            "description": "Taxa for the tree",
            "required": false
          }
        ]
      },
      {
        "name": "Coalescent",
        "generatorType": "distribution",
        "generatedType": "Tree",
        "namespace": "phylospec.distributions.tree",
        "description": "Coalescent process for population genetics",
        "arguments": [
          {
            "name": "populationSize",
            "type": "PositiveReal",
            "description": "Effective population size",
            "required": true,
            "default": 1.0
          },
          {
            "name": "taxa",
            "type": "TaxonSet",
            "description": "Taxa for the tree",
            "required": false
          }
        ]
      },
      {
        "name": "PhyloBM",
        "generatorType": "distribution",
        "generatedType": "Vector<Real>",
        "namespace": "phylospec.distributions.continuous",
        "description": "Phylogenetic Brownian motion for the continuous evolution of a single trait",
        "arguments": [
          {
            "name": "tree",
            "type": "Tree",
            "description": "Phylogenetic tree",
            "required": true
          },
          {
            "name": "sigma",
            "type": "PositiveReal",
            "description": "Rate of evolution",
            "required": true,
            "default": 1.0
          },
          {
            "name": "rootValue",
            "type": "Real",
            "description": "Trait value at the root",
            "required": true,
            "default": 0.0
          }
        ]
      },
      {
        "name": "PhyloOU",
        "generatorType": "distribution",
        "generatedType": "Vector<Real>",
        "namespace": "phylospec.distributions.continuous",
        "description": "Phylogenetic Ornstein-Uhlenbeck process for a univariate trait with selection",
        "arguments": [
          {
            "name": "tree",
            "type": "Tree",
            "description": "Phylogenetic tree",
            "required": true
          },
          {
            "name": "sigma",
            "type": "PositiveReal",
            "description": "Rate of random evolution",
            "required": true,
            "default": 1.0
          },
          {
            "name": "alpha",
            "type": "PositiveReal",
            "description": "Selection strength",
            "required": true,
            "default": 1.0
          },
          {
            "name": "optimum",
            "type": "Real",
            "description": "Optimal trait value",
            "required": true,
            "default": 0.0
          }
        ]
      },
      {
        "name": "PhyloCTMC",
        "generatorType": "distribution",
        "generatedType": "Alignment",
        "namespace": "phylospec.distributions.sequence",
        "description": "Phylogenetic continuous-time Markov chain",
        "arguments": [
          {
            "name": "tree",
            "type": "Tree",
            "description": "Phylogenetic tree",
            "required": true
          },
          {
            "name": "Q",
            "type": "QMatrix",
            "description": "Rate matrix",
            "required": true
          },
          {
            "name": "siteRates",
            "type": "Vector<Real>",
            "description": "Rate heterogeneity across sites",
            "required": false,
            "dimension": "target.nchar"
          },
          {
            "name": "branchRates",
            "type": "Vector<Real>",
            "description": "Rate heterogeneity across branches",
            "required": false,
            "dimension": "2 * target.ntax - 2"
          }
        ]
      },
      {
        "name": "Normal",
        "generatorType": "function",
        "generatedType": "Normal",
        "namespace": "phylospec.distributions",
        "description": "Construct a Normal distribution object",
        "arguments": [
          {
            "name": "mean",
            "type": "Real",
            "description": "Mean of the distribution",
            "required": true,
            "default": 0.0
          },
          {
            "name": "sd",
            "type": "PositiveReal",
            "description": "Standard deviation",
            "required": true,
            "default": 1.0
          }
        ]
      },
      {
        "name": "LogNormal",
        "generatorType": "function",
        "generatedType": "LogNormal",
        "namespace": "phylospec.distributions",
        "description": "Construct a LogNormal distribution object",
        "arguments": [
          {
            "name": "meanlog",
            "type": "Real",
            "description": "Mean of the distribution in log space",
            "required": true,
            "default": 0.0
          },
          {
            "name": "sdlog",
            "type": "PositiveReal",
            "description": "Standard deviation in log space",
            "required": true,
            "default": 1.0
          }
        ]
      },
      {
        "name": "Gamma",
        "generatorType": "function",
        "generatedType": "Gamma",
        "namespace": "phylospec.distributions",
        "description": "Construct a Gamma distribution object",
        "arguments": [
          {
            "name": "shape",
            "type": "PositiveReal",
            "description": "Shape parameter",
            "required": true,
            "default": 1.0
          },
          {
            "name": "rate",
            "type": "PositiveReal",
            "description": "Rate parameter",
            "required": true,
            "default": 1.0
          }
        ]
      },
      {
        "name": "Beta",
        "generatorType": "function",
        "generatedType": "Beta",
        "namespace": "phylospec.distributions",
        "description": "Construct a Beta distribution object",
        "arguments": [
          {
            "name": "alpha",
            "type": "PositiveReal",
            "description": "Alpha parameter",
            "required": true,
            "default": 1.0
          },
          {
            "name": "beta",
            "type": "PositiveReal",
            "description": "Beta parameter",
            "required": true,
            "default": 1.0
          }
        ]
      },
      {
        "name": "Exponential",
        "generatorType": "function",
        "generatedType": "Exponential",
        "namespace": "phylospec.distributions",
        "description": "Construct an Exponential distribution object",
        "arguments": [
          {
            "name": "rate",
            "type": "PositiveReal",
            "description": "Rate parameter",
            "required": true,
            "default": 1.0
          }
        ]
      },
      {
        "name": "Uniform",
        "generatorType": "function",
        "generatedType": "Uniform",
        "namespace": "phylospec.distributions",
        "description": "Construct a Uniform distribution object",
        "arguments": [
          {
            "name": "lower",
            "type": "Real",
            "description": "Lower bound",
            "required": true
          },
          {
            "name": "upper",
            "type": "Real",
            "description": "Upper bound",
            "required": true
          }
        ]
      },
      {
        "name": "Dirichlet",
        "generatorType": "function",
        "generatedType": "Dirichlet",
        "namespace": "phylospec.distributions",
        "description": "Construct a Dirichlet distribution object",
        "arguments": [
          {
            "name": "alpha",
            "type": "Vector<Real>",
            "description": "Concentration parameters",
            "required": true,
            "default": [1.0, 1.0, 1.0, 1.0],
            "dimension": "target.dimension"
          }
        ]
      },
      {
        "name": "MultivariateNormal",
        "generatorType": "function",
        "generatedType": "MultivariateNormal",
        "namespace": "phylospec.distributions",
        "description": "Construct a MultivariateNormal distribution object",
        "arguments": [
          {
            "name": "mean",
            "type": "Vector<Real>",
            "description": "Mean vector",
            "required": true,
            "dimension": "target.dimension"
          },
          {
            "name": "covariance",
            "type": "Matrix<Real>",
            "description": "Covariance matrix",
            "required": true,
            "dimension": "target.dimension"
          }
        ]
      },
      {
        "name": "Yule",
        "generatorType": "function",
        "generatedType": "Yule",
        "namespace": "phylospec.distributions.tree",
        "description": "Construct a Yule distribution object",
        "arguments": [
          {
            "name": "birthRate",
            "type": "PositiveReal",
            "description": "Birth rate parameter",
            "required": true,
            "default": 1.0
          },
          {
            "name": "taxa",
            "type": "TaxonSet",
            "description": "Taxa for the tree",
            "required": false
          }
        ]
      },
      {
        "name": "BirthDeath",
        "generatorType": "function",
        "generatedType": "BirthDeath",
        "namespace": "phylospec.distributions.tree",
        "description": "Construct a BirthDeath distribution object",
        "arguments": [
          {
            "name": "birthRate",
            "type": "PositiveReal",
            "description": "Birth rate parameter",
            "required": true
          },
          {
            "name": "deathRate",
            "type": "PositiveReal",
            "description": "Death rate parameter",
            "required": true
          },
          {
            "name": "rootHeight",
            "type": "PositiveReal",
            "description": "Height of the tree root",
            "required": false
          },
          {
            "name": "taxa",
            "type": "TaxonSet",
            "description": "Taxa for the tree",
            "required": false
          }
        ]
      },
      {
        "name": "Coalescent",
        "generatorType": "function",
        "generatedType": "Coalescent",
        "namespace": "phylospec.distributions.tree",
        "description": "Construct a Coalescent distribution object",
        "arguments": [
          {
            "name": "populationSize",
            "type": "PositiveReal",
            "description": "Effective population size",
            "required": true,
            "default": 1.0
          },
          {
            "name": "taxa",
            "type": "TaxonSet",
            "description": "Taxa for the tree",
            "required": false
          }
        ]
      },
      {
        "name": "FossilBirthDeath",
        "generatorType": "function",
        "generatedType": "FossilBirthDeath",
        "namespace": "phylospec.distributions.tree",
        "description": "Construct a FossilBirthDeath distribution object",
        "arguments": [
          {
            "name": "birthRate",
            "type": "PositiveReal",
            "description": "Birth (speciation) rate",
            "required": true
          },
          {
            "name": "deathRate",
            "type": "NonNegativeReal",
            "description": "Death (extinction) rate",
            "required": true
          },
          {
            "name": "samplingRate",
            "type": "NonNegativeReal",
            "description": "Rate of fossil sampling",
            "required": true
          },
          {
            "name": "rho",
            "type": "Probability",
            "description": "Probability of sampling at present",
            "required": false,
            "default": 1.0
          },
          {
            "name": "origin",
            "type": "PositiveReal",
            "description": "Time of origin",
            "required": false
          },
          {
            "name": "taxa",
            "type": "TaxonSet",
            "description": "Taxa for the tree (including fossils)",
            "required": false
          }
        ]
      },
      {
        "name": "PhyloCTMC",
        "generatorType": "function",
        "generatedType": "PhyloCTMC",
        "namespace": "phylospec.distributions.sequence",
        "description": "Construct a PhyloCTMC distribution object",
        "arguments": [
          {
            "name": "tree",
            "type": "Tree",
            "description": "Phylogenetic tree",
            "required": true
          },
          {
            "name": "Q",
            "type": "QMatrix",
            "description": "Rate matrix",
            "required": true
          },
          {
            "name": "siteRates",
            "type": "Vector<Real>",
            "description": "Rate heterogeneity across sites",
            "required": false,
            "dimension": "target.nchar"
          },
          {
            "name": "branchRates",
            "type": "Vector<Real>",
            "description": "Rate heterogeneity across branches",
            "required": false,
            "dimension": "2 * target.ntax - 2"
          }
        ]
      },
      {
        "name": "PhyloBM",
        "generatorType": "function",
        "generatedType": "PhyloBM",
        "namespace": "phylospec.distributions.continuous",
        "description": "Construct a PhyloBM distribution object",
        "arguments": [
          {
            "name": "tree",
            "type": "Tree",
            "description": "Phylogenetic tree",
            "required": true
          },
          {
            "name": "sigma",
            "type": "PositiveReal",
            "description": "Rate of evolution",
            "required": true,
            "default": 1.0
          },
          {
            "name": "rootValue",
            "type": "Real",
            "description": "Trait value at the root",
            "required": true,
            "default": 0.0
          }
        ]
      },
      {
        "name": "PhyloOU",
        "generatorType": "function",
        "generatedType": "PhyloOU",
        "namespace": "phylospec.distributions.continuous",
        "description": "Construct a PhyloOU distribution object",
        "arguments": [
          {
            "name": "tree",
            "type": "Tree",
            "description": "Phylogenetic tree",
            "required": true
          },
          {
            "name": "sigma",
            "type": "PositiveReal",
            "description": "Rate of random evolution",
            "required": true,
            "default": 1.0
          },
          {
            "name": "alpha",
            "type": "PositiveReal",
            "description": "Selection strength",
            "required": true,
            "default": 1.0
          },
          {
            "name": "optimum",
            "type": "Real",
            "description": "Optimal trait value",
            "required": true,
            "default": 0.0
          }
        ]
      },
      {
        "name": "IID",
        "generatorType": "function",
        "generatedType": "IID",
        "namespace": "phylospec.distributions",
        "description": "Construct an IID distribution object",
        "typeParameters": ["T"],
        "arguments": [
          {
            "name": "base",
            "type": "Distribution<T>",
            "description": "Base distribution for each component",
            "required": true
          },
          {
            "name": "n",
            "type": "PositiveInteger",
            "description": "Number of independent draws",
            "required": true
          }
        ]
      },
      {
        "name": "Mixture",
        "generatorType": "function",
        "generatedType": "Mixture",
        "namespace": "phylospec.distributions.mixture",
        "description": "Construct a Mixture distribution object",
        "typeParameters": ["T"],
        "arguments": [
          {
            "name": "components",
            "type": "Vector<Distribution<T>>",
            "description": "Component distributions that all generate type T",
            "required": true
          },
          {
            "name": "weights",
            "type": "Simplex",
            "description": "Mixture weights for each component",
            "required": true,
            "dimension": "components.length"
          }
        ]
      },
      {
        "name": "JC69",
        "generatorType": "function",
        "generatedType": "QMatrix",
        "namespace": "phylospec.functions.substitution",
        "description": "Jukes-Cantor model (equal rates)",
        "arguments": []
      },
      {
        "name": "K80",
        "generatorType": "function",
        "generatedType": "QMatrix",
        "namespace": "phylospec.functions.substitution",
        "description": "Kimura 2-parameter model",
        "arguments": [
          {
            "name": "kappa",
            "type": "PositiveReal",
            "description": "Transition/transversion ratio",
            "required": true,
            "default": 2.0
          }
        ]
      },
      {
        "name": "F81",
        "generatorType": "function",
        "generatedType": "QMatrix",
        "namespace": "phylospec.functions.substitution",
        "description": "Felsenstein 81 model",
        "arguments": [
          {
            "name": "baseFrequencies",
            "type": "Simplex",
            "description": "Nucleotide frequencies",
            "required": true,
            "default": [0.25, 0.25, 0.25, 0.25],
            "dimension": 4
          }
        ]
      },
      {
        "name": "HKY",
        "generatorType": "function",
        "generatedType": "QMatrix",
        "namespace": "phylospec.functions.substitution",
        "description": "Hasegawa-Kishino-Yano model",
        "arguments": [
          {
            "name": "kappa",
            "type": "PositiveReal",
            "description": "Transition/transversion ratio",
            "required": true,
            "default": 2.0
          },
          {
            "name": "baseFrequencies",
            "type": "Simplex",
            "description": "Nucleotide frequencies",
            "required": true,
            "default": [0.25, 0.25, 0.25, 0.25],
            "dimension": 4
          }
        ]
      },
      {
        "name": "GTR",
        "generatorType": "function",
        "generatedType": "QMatrix",
        "namespace": "phylospec.functions.substitution",
        "description": "General Time-Reversible model",
        "arguments": [
          {
            "name": "rateMatrix",
            "type": "Vector<Real>",
            "description": "Relative rate parameters",
            "required": true,
            "default": [1.0, 1.0, 1.0, 1.0, 1.0, 1.0],
            "dimension": 6
          },
          {
            "name": "baseFrequencies",
            "type": "Simplex",
            "description": "Nucleotide frequencies",
            "required": true,
            "default": [0.25, 0.25, 0.25, 0.25],
            "dimension": 4
          }
        ]
      },
      {
        "name": "WAG",
        "generatorType": "function",
        "generatedType": "QMatrix",
        "namespace": "phylospec.functions.substitution",
        "description": "Whelan And Goldman model",
        "arguments": [
          {
            "name": "baseFrequencies",
            "type": "Simplex",
            "description": "Amino acid frequencies",
            "required": false,
            "dimension": 20
          }
        ]
      },
      {
        "name": "JTT",
        "generatorType": "function",
        "generatedType": "QMatrix",
        "namespace": "phylospec.functions.substitution",
        "description": "Jones-Taylor-Thornton model",
        "arguments": [
          {
            "name": "baseFrequencies",
            "type": "Simplex",
            "description": "Amino acid frequencies",
            "required": false,
            "dimension": 20
          }
        ]
      },
      {
        "name": "LG",
        "generatorType": "function",
        "generatedType": "QMatrix",
        "namespace": "phylospec.functions.substitution",
        "description": "Le-Gascuel model",
        "arguments": [
          {
            "name": "baseFrequencies",
            "type": "Simplex",
            "description": "Amino acid frequencies",
            "required": false,
            "dimension": 20
          }
        ]
      },
      {
        "name": "DiscreteGamma",
        "generatorType": "function",
        "generatedType": "Vector<Real>",
        "namespace": "phylospec.functions.rateheterogeneity",
        "description": "Discrete gamma-distributed rates across sites",
        "arguments": [
          {
            "name": "shape",
            "type": "PositiveReal",
            "description": "Shape parameter",
            "required": true,
            "default": 1.0
          },
          {
            "name": "categories",
            "type": "PositiveInteger",
            "description": "Number of discrete categories",
            "required": true,
            "default": 4
          }
        ]
      },
      {
        "name": "StrictClock",
        "generatorType": "function",
        "generatedType": "Vector<Real>",
        "namespace": "phylospec.functions.clock",
        "description": "Strict molecular clock for branches",
        "arguments": [
          {
            "name": "rate",
            "type": "PositiveReal",
            "description": "Clock rate",
            "required": true,
            "default": 1.0
          },
          {
            "name": "tree",
            "type": "Tree",
            "description": "Tree to apply clock to",
            "required": false
          }
        ]
      },
      {
        "name": "UncorrelatedLognormal",
        "generatorType": "function",
        "generatedType": "Vector<Real>",
        "namespace": "phylospec.functions.clock",
        "description": "UCLN clock model for branch rates",
        "arguments": [
          {
            "name": "mean",
            "type": "Real",
            "description": "Mean in log space",
            "required": true,
            "default": 0.0
          },
          {
            "name": "stdev",
            "type": "PositiveReal",
            "description": "Standard deviation",
            "required": true,
            "default": 0.5
          },
          {
            "name": "tree",
            "type": "Tree",
            "description": "Tree to apply clock to",
            "required": false
          }
        ]
      },
      {
        "name": "nexus",
        "generatorType": "function",
        "generatedType": "Alignment",
        "namespace": "phylospec.functions.io",
        "description": "Load alignment from Nexus file",
        "ioHints": {
          "role": "dataInput",
          "extensions": [".nex", ".nexus", ".nxs"],
          "fileArgument": "file"
        },
        "arguments": [
          {
            "name": "file",
            "type": "String",
            "description": "Path to Nexus file",
            "required": true
          },
          {
            "name": "id",
            "type": "String",
            "description": "Identifier for the alignment",
            "required": false
          }
        ]
      },
      {
        "name": "fasta",
        "generatorType": "function",
        "generatedType": "Alignment",
        "namespace": "phylospec.functions.io",
        "description": "Load alignment from FASTA file",
        "ioHints": {
          "role": "dataInput",
          "extensions": [".fasta", ".fas", ".fa"],
          "fileArgument": "file"
        },
        "arguments": [
          {
            "name": "file",
            "type": "String",
            "description": "Path to FASTA file",
            "required": true
          }
        ]
      },
      {
        "name": "phylip",
        "generatorType": "function",
        "generatedType": "Alignment",
        "namespace": "phylospec.functions.io",
        "description": "Load alignment from PHYLIP file",
        "ioHints": {
          "role": "dataInput",
          "extensions": [".phy", ".phylip"],
          "fileArgument": "file"
        },
        "arguments": [
          {
            "name": "file",
            "type": "String",
            "description": "Path to PHYLIP file",
            "required": true
          },
          {
            "name": "interleaved",
            "type": "Boolean",
            "description": "Whether the file is in interleaved format",
            "required": false,
            "default": false
          }
        ]
      },
      {
        "name": "taxa",
        "generatorType": "function",
        "generatedType": "TaxonSet",
        "namespace": "phylospec.functions.alignment",
        "description": "Extract taxa from an alignment",
        "arguments": [
          {
            "name": "alignment",
            "type": "Alignment",
            "description": "Alignment to extract taxa from",
            "required": true
          }
        ]
      },
      {
        "name": "ntaxa",
        "generatorType": "function",
        "generatedType": "Integer",
        "namespace": "phylospec.functions.alignment",
        "description": "Get number of taxa in an alignment",
        "arguments": [
          {
            "name": "alignment",
            "type": "Alignment",
            "description": "Alignment to count taxa from",
            "required": true
          }
        ]
      },
      {
        "name": "nchar",
        "generatorType": "function",
        "generatedType": "Integer",
        "namespace": "phylospec.functions.alignment",
        "description": "Get number of characters/sites in an alignment",
        "arguments": [
          {
            "name": "alignment",
            "type": "Alignment",
            "description": "Alignment to count characters from",
            "required": true
          }
        ]
      },
      {
        "name": "dataType",
        "generatorType": "function",
        "generatedType": "String",
        "namespace": "phylospec.functions.alignment",
        "description": "Get the data type of an alignment",
        "arguments": [
          {
            "name": "alignment",
            "type": "Alignment",
            "description": "Alignment to query",
            "required": true
          }
        ]
      },
      {
        "name": "subset",
        "generatorType": "function",
        "generatedType": "Alignment",
        "namespace": "phylospec.functions.alignment",
        "description": "Extract a subset of sites from an alignment",
        "arguments": [
          {
            "name": "alignment",
            "type": "Alignment",
            "description": "Original alignment",
            "required": true
          },
          {
            "name": "sites",
            "type": "Vector<Integer>",
            "description": "Site indices to extract",
            "required": true
          }
        ]
      },
      {
        "name": "taxonset",
        "generatorType": "function",
        "generatedType": "TaxonSet",
        "namespace": "phylospec.functions.taxa",
        "description": "Create a taxon set from taxon names",
        "arguments": [
          {
            "name": "names",
            "type": "Vector<String>",
            "description": "Array of taxon names",
            "required": true
          }
        ]
      },
      {
        "name": "mrca",
        "generatorType": "function",
        "generatedType": "TreeNode",
        "namespace": "phylospec.functions.tree",
        "description": "Find most recent common ancestor of taxa",
        "arguments": [
          {
            "name": "tree",
            "type": "Tree",
            "description": "Phylogenetic tree",
            "required": true
          },
          {
            "name": "taxa",
            "type": "TaxonSet",
            "description": "Set of taxa",
            "required": true
          }
        ]
      },
      {
        "name": "treeHeight",
        "generatorType": "function",
        "generatedType": "Real",
        "namespace": "phylospec.functions.tree",
        "description": "Get height/depth of a tree",
        "arguments": [
          {
            "name": "tree",
            "type": "Tree",
            "description": "Phylogenetic tree",
            "required": true
          }
        ]
      },
      {
        "name": "log",
        "generatorType": "function",
        "generatedType": "Real",
        "namespace": "phylospec.functions.math",
        "description": "Natural logarithm",
        "arguments": [
          {
            "name": "x",
            "type": "PositiveReal",
            "description": "Input value",
            "required": true
          }
        ]
      },
      {
        "name": "exp",
        "generatorType": "function",
        "generatedType": "PositiveReal",
        "namespace": "phylospec.functions.math",
        "description": "Exponential function",
        "arguments": [
          {
            "name": "x",
            "type": "Real",
            "description": "Input value",
            "required": true
          }
        ]
      }
    ]
  }
}