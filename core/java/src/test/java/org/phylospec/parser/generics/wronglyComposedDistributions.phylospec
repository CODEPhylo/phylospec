// IID
Distribution<Real> base = Exponential(rate = 10)
Distribution<Vector<PositiveReal>> iidDist = IID(base = base, n = 2)

// Mixture
Vector<Distribution<Real>> components = [Exponential(rate = 10), Normal(mean = 1, sd = 2)]
Simplex weights ~ Dirichlet(alpha = [1, 1])
Mixture<PositiveReal> mixture = Mixture(components = components, weights = weights)

// EXPECT AST
// (AS Distribution<Real> base (CA Exponential (AA rate 10)))
// (AS Distribution<Vector<PositiveReal>> iidDist (CA IID (AA base base) (AA n 2)))
// (AS Vector<Distribution<Real>> components (AR (CA Exponential (AA rate 10)) (CA Normal (AA mean 1) (AA sd 2))))
// (DR Simplex weights (CA Dirichlet (AA alpha (AR 1 1))))
// (AS Mixture<PositiveReal> mixture (CA Mixture (AA components components) (AA weights weights)))
// EXPECT AST

// EXPECT TYPE_ERRORS
// Expression of type `[Distribution<Vector<Real>>,IID]` cannot be assigned to variable `iidDist` of type `Distribution<Vector<PositiveReal>>`
// Expression of type `Mixture<Real>` cannot be assigned to variable `mixture` of type `Mixture<PositiveReal>`
// EXPECT TYPE_ERRORS

