// IID
Exponential base = Exponential(rate = 10)
Distribution<Vector<Real>> iidDist = IID(base = base, n = 2)
Vector<Real> iid ~ iidDist

// Mixture
Vector<Distribution<Real>> components = [Exponential(rate = 10), Normal(mean = 1, sd = 2)]
Simplex weights ~ Dirichlet(alpha = [1, 1])
Mixture<Real> mixture = Mixture(components = components, weights = weights)

// EXPECT AST
// (AS Exponential base (CA Exponential (AA rate 10)))
// (AS Distribution<Vector<Real>> iidDist (CA IID (AA base base) (AA n 2)))
// (DR Vector<Real> iid iidDist)
// (AS Vector<Distribution<Real>> components (AR (CA Exponential (AA rate 10)) (CA Normal (AA mean 1) (AA sd 2))))
// (DR Simplex weights (CA Dirichlet (AA alpha (AR 1 1))))
// (AS Mixture<Real> mixture (CA Mixture (AA components components) (AA weights weights)))
// EXPECT AST

// EXPECT TYPE_ERRORS
// EXPECT TYPE_ERRORS